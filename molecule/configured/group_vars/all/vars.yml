---

syslog_message_templates:
  nginx: '${MSG}\n'

syslog_options:
  # If the log message is forwarded to the logserver via a relay, and the
  # chain_hostnames() option is 'yes', the relay adds its own hostname to
  # the hostname of the client, separated with a / character.
  chain_hostnames: false
  # Check client hostnames for valid DNS characters
  check_hostname: true
  # Specify whether to trust hostname in the log message.
  # If "yes", then it is left unchanged, if "no" the server replaces
  # it with client's DNS lookup value.
  keep_hostname: false
  # Use DNS fully qualified domain names (FQDN)
  # for the names of log file folders
  use_fqdn: false
  use_dns: false
  # Set permissions on newly created 'messages' files
  owner: root
  group: root
  perm: 0755
  # Set permissions on newly created directories
  dir_owner: root
  dir_group: root
  dir_perm: 0755
  create_dirs: true
  # Maximum length of a message in bytes.
  log_msg_size: 18192
  # make ISO-8601 timestamps
  ts_format: iso

syslog_logs:
  ansible:
    file_name: ansible.log
    filter:
      filter: program(ansible)
  remote:
    source: net
    template: nginx
    file_name: "remote/nginx/${HOST}/${YEAR}.${MONTH}.${DAY}/messages.log"
  remote_foo:
    source: net
    file_name: "remote/${HOST}/message"
    filter:
      filter:
        - not host("localhost")
  separatedbyhosts:
    source: s_remote_tcp
    file_name: "remote/$HOST/$YEAR-$MONTH-$DAY/messages"
    flags:
      - fallback
  loghost:
    source: s_remote_udp
    destination:
      udp:
        ip: "10.10.0.1"
        port: 514
        spoof_source: true
        log_fifo_size: 1000
      # file: "remote/$HOST/$YEAR-$MONTH-$DAY/messages"
    flags:
      - catchall

syslog_sources:
  net:
    - comment: network
      udp:

  s_remote_tcp:
    - comment: remote sources on port 5140
      tcp:
        ip: 0.0.0.0
        port: 5140

  s_remote_udp:
    - comment: remote sources on port 5140
      udp:
        ip: 0.0.0.0
        port: 5140
